# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"plot_bipartite": "api.ipynb",
         "plot_residuals": "api.ipynb",
         "plot_extrinsics": "api.ipynb",
         "save": "api.ipynb",
         "load": "api.ipynb",
         "init_intrin": "calib.ipynb",
         "init_extrin": "calib.ipynb",
         "SSE": "calib.ipynb",
         "w2p_loss": "calib.ipynb",
         "lbfgs_optimize": "calib.ipynb",
         "Node": "calib.ipynb",
         "CamNode": "calib.ipynb",
         "CbNode": "calib.ipynb",
         "single_calib": "calib.ipynb",
         "multi_calib": "calib.ipynb",
         "PGeom": "cb_geom.ipynb",
         "BGeom": "cb_geom.ipynb",
         "CpGeom": "cb_geom.ipynb",
         "CpCSRGrid": "cb_geom.ipynb",
         "CpCSDGrid": "cb_geom.ipynb",
         "FmGeom": "cb_geom.ipynb",
         "FmCFPGrid": "cb_geom.ipynb",
         "CbGeom": "cb_geom.ipynb",
         "CPRefiner": "control_refine.ipynb",
         "CheckerRefiner": "control_refine.ipynb",
         "checker_opencv": "control_refine.ipynb",
         "OpenCVCheckerRefiner": "control_refine.ipynb",
         "EllipseRefiner": "control_refine.ipynb",
         "fit_conic": "control_refine.ipynb",
         "ellipse_dualconic": "control_refine.ipynb",
         "DualConicEllipseRefiner": "control_refine.ipynb",
         "DotVisionCheckerDLDetector": "fiducial_detect.ipynb",
         "Img": "image.ipynb",
         "FileImg": "image.ipynb",
         "File16bitImg": "image.ipynb",
         "ArrayImg": "image.ipynb",
         "tensors2parameters": "modules.ipynb",
         "Inversible": "modules.ipynb",
         "Inverse": "modules.ipynb",
         "assert_inversible": "modules.ipynb",
         "Translation": "modules.ipynb",
         "Rotation": "modules.ipynb",
         "EulerRotation": "modules.ipynb",
         "InversibleSequential": "modules.ipynb",
         "Rigid": "modules.ipynb",
         "Rigids": "modules.ipynb",
         "Normalize": "modules.ipynb",
         "Augment": "modules.ipynb",
         "NoDistortion": "modules.ipynb",
         "Heikkila97Distortion": "modules.ipynb",
         "Wang08Distortion": "modules.ipynb",
         "a2A": "modules.ipynb",
         "Cam": "modules.ipynb",
         "CamSF": "modules.ipynb",
         "plot_cb": "plot.ipynb",
         "plot_cam": "plot.ipynb",
         "args_loop": "utils.ipynb",
         "Converter": "utils.ipynb",
         "Torch2np": "utils.ipynb",
         "torch2np": "utils.ipynb",
         "Np2torch": "utils.ipynb",
         "np2torch": "utils.ipynb",
         "numpyify": "utils.ipynb",
         "assert_allclose": "utils.ipynb",
         "assert_allclose_f": "utils.ipynb",
         "assert_allclose_f_ttn": "utils.ipynb",
         "reverse": "utils.ipynb",
         "shape": "utils.ipynb",
         "stackify": "utils.ipynb",
         "delete": "utils.ipynb",
         "rescale": "utils.ipynb",
         "singlify": "utils.ipynb",
         "augment": "utils.ipynb",
         "deaugment": "utils.ipynb",
         "normalize": "utils.ipynb",
         "ps_bb": "utils.ipynb",
         "array_bb": "utils.ipynb",
         "bb_sz": "utils.ipynb",
         "bb_grid": "utils.ipynb",
         "bb_array": "utils.ipynb",
         "is_p_in_bb": "utils.ipynb",
         "is_bb_in_bb": "utils.ipynb",
         "is_p_in_b": "utils.ipynb",
         "grid2ps": "utils.ipynb",
         "array_ps": "utils.ipynb",
         "crrgrid": "utils.ipynb",
         "csrgrid": "utils.ipynb",
         "csdgrid": "utils.ipynb",
         "cfpgrid": "utils.ipynb",
         "unitize": "utils.ipynb",
         "cross_mat": "utils.ipynb",
         "pmm": "utils.ipynb",
         "condition_mat": "utils.ipynb",
         "condition": "utils.ipynb",
         "homography": "utils.ipynb",
         "approx_R": "utils.ipynb",
         "euler2R": "utils.ipynb",
         "R2euler": "utils.ipynb",
         "rodrigues2R": "utils.ipynb",
         "R2rodrigues": "utils.ipynb",
         "Rt2M": "utils.ipynb",
         "M2Rt": "utils.ipynb",
         "invert_rigid": "utils.ipynb",
         "mult_rigid": "utils.ipynb",
         "random_unit": "utils.ipynb",
         "v_v_angle": "utils.ipynb",
         "v_v_R": "utils.ipynb",
         "pm2l": "utils.ipynb",
         "ps2l": "utils.ipynb",
         "pld": "utils.ipynb",
         "l_l_intersect": "utils.ipynb",
         "bb_ls": "utils.ipynb",
         "bb_l_intersect": "utils.ipynb",
         "sample_2pi": "utils.ipynb",
         "sample_ellipse": "utils.ipynb",
         "ellipse2conic": "utils.ipynb",
         "conic2ellipse": "utils.ipynb",
         "rgb2gray": "utils.ipynb",
         "imresize": "utils.ipynb",
         "conv2d": "utils.ipynb",
         "pad": "utils.ipynb",
         "grad_array": "utils.ipynb",
         "interp_array": "utils.ipynb",
         "wlstsq": "utils.ipynb",
         "get_colors": "utils.ipynb",
         "get_notebook_file": "utils.ipynb",
         "save_notebook": "utils.ipynb",
         "build_notebook": "utils.ipynb",
         "convert_notebook": "utils.ipynb",
         "Formatter": "utils.ipynb"}

modules = ["api.py",
           "calib.py",
           "cb_geom.py",
           "control_refine.py",
           "fiducial_detect.py",
           "image.py",
           "modules.py",
           "plot.py",
           "utils.py"]

doc_url = "https://justinblaber.github.io/camera_calib/"

git_url = "https://github.com/justinblaber/camera_calib/tree/master/"

def custom_doc_links(name): return None