#AUTOGENERATED! DO NOT EDIT! File to edit: dev/calib_geom.ipynb (unless otherwise specified).

__all__ = ['CBGeom', 'CFPGridF', 'CRGridC']

#Cell
import numpy as np

from .utils import *

#Cell
class CBGeom:
    def __init__(self, geom_f, geom_c):
        self.geom_f, self.geom_c = geom_f, geom_c

    @property
    def ps_f(self): return self.geom_f.ps_f
    @property
    def ps_c(self): return self.geom_c.ps_c

#Cell
class CFPGridF():
    def __init__(self, h_fp, w_fp):
        self.h_fp, self.w_fp = h_fp, w_fp

    @property
    def ps_f(self): return grid2ps(*np.meshgrid([-self.w_fp/2, self.w_fp/2],
                                                [-self.h_fp/2, self.h_fp/2]), 'F')

#Cell
class CRGridC():
    def __init__(self, num_c_h, num_c_w, spacing, idx_remove=None):
        self.num_c_h = num_c_h
        self.num_c_w = num_c_w
        self.spacing = spacing
        self.idx_remove = idx_remove if idx_remove is not None else np.full(num_c_h*num_c_w, False)

    @property
    def ps_c(self):
        h_c = self.spacing*(self.num_c_h-1)
        w_c = self.spacing*(self.num_c_w-1)
        ps_c = grid2ps(*np.meshgrid(np.linspace(-w_c/2,  w_c/2, self.num_c_w),
                                    np.linspace(-h_c/2,  h_c/2, self.num_c_h)), 'F')
        return ps_c[~self.idx_remove]