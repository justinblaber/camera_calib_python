#AUTOGENERATED! DO NOT EDIT! File to edit: dev/test.ipynb (unless otherwise specified).

__all__ = ['homography']

#Cell
import numpy as np
from scipy.stats import multivariate_normal

from .cb_geom import *
from .control_refine import OpenCVCheckerRefiner
from .utils import *

#Cell
def homography(ps1, ps2):
    # Condition and augment points
    (ps1_cond, T1), (ps2_cond, T2) = map(condition, [ps1, ps2])
    ps1_cond, ps2_cond = map(augment, [ps1_cond, ps2_cond])

    # Form homogeneous system
    L = np.r_[np.c_[ps1_cond, np.zeros_like(ps1_cond), -ps2_cond[:, 0:1]*ps1_cond],
              np.c_[np.zeros_like(ps1_cond), ps1_cond, -ps2_cond[:, 1:2]*ps1_cond]]

    # Solution is the last row of V
    _,_,V = np.linalg.svd(L)
    H12_cond = V[-1, :].reshape(3,3)

    # Undo conditioning
    H12 = np.linalg.inv(T2)@H12_cond@T1
    H12 /= H12[2,2] # Sets H12[2,2] to 1
    return H12